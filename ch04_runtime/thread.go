package rtda

/*
JVM 运行时的数据区有两种：一种是多线程共享，在 JVM 启动和关闭时才会创建和销毁，另一种是线程私有数据，
在线程的启动和退出时才会创建和销毁

多线程共享数据也有两种：类数据和实例数据
实例数据即对象，存放在 Heap 中，类数据存放在 Method area 方法区域中。其中 Heap 会定时进行 GC
从逻辑上而言，方法区域也属于 Heap 的一部分

线程私有数据用于辅助执行 Java 字节码，每个线程都有自己的 pc（Program Counter）寄存器和 JVM 栈帧（JVM Stack）
栈帧用于保存方法执行装填，如本地变量表和操作数栈

在任意时刻一个肯定有一个线程在执行一个方法，则这个方法叫做当前线程的当前方法，执行该方法的栈帧叫做线程的
当前帧，而声明该方法的类则被成为当前类。如果当前执行的方法是一个 Java 方法，则 pc 寄存器中则会存放当前正在
执行的 JVM 指令地址，否则，当前方法是本地方法，pc 寄存器中的值无定义
*/
type Thread struct {
	pc    int
	stack *Stack
}
